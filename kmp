//find s in t 
void KMP(string s, string t)
{
    if (s.empty() || t.empty()) return;

    s = '.' + s;
    t = '.' + t;

    int j;
    int* nxt = new int[s.length() + 1];

    j = nxt[1] = nxt[0] = 0;

    for (int i = 2; i < s.length(); ++i) 
    {
        while (j > 0 && s[j + 1] != s[i]) j = nxt[j];

        if (s[j + 1] == s[i]) ++j;
        nxt[i] = j;
    }

    j = 0;

    for (int i = 1; i < t.length(); ++i) 
    {
        while (j > 0 && s[j + 1] != t[i]) j = nxt[j];

        if (s[j + 1] == t[i]) ++j;

        if (j == s.length() - 1) 
        { 
            cout << i - j + 1 << ' ';
            j = nxt[j];
        }
    }
}
